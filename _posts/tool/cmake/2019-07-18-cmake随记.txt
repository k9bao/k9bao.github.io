---
layout: post
title: cmake随记
date: 2019-04-23 15:16:25
description: cmake随记
tag: cmake

---
option(<option_variable> "help string describing option"
       [initial value])
定义变量，如果给了initial value，则此参数有效。如果不给initial value，则参数无效。
举例：OPTION(MOCK_MEGFACE "mock megface" TRUE)

set(<variable> <value>
    [[CACHE <type> <docstring> [FORCE]] | PARENT_SCOPE])
设置一个变量，value可以有多个(多个的话，实际效果是用分号分割)。CACHE设置后对全局有效，否则只有本文件有效。
type：
FILEPATH = File chooser dialog.
PATH     = Directory chooser dialog.
STRING   = Arbitrary string.
BOOL     = Boolean ON/OFF checkbox.
INTERNAL = No GUI entry (used for persistent variables).
PARENT_SCOPE：value的范围
set(EP_MIRROR_DIR  "http://10.201.102.223:8111/sources" CACHE STRING "mirrors path")

include(<file|module> [OPTIONAL] [RESULT_VARIABLE <VAR>]
                      [NO_POLICY_SCOPE])
包含文件或者模块，模块指后缀是.cmake的文件(modulename.cmake)。如果设置返回值，会返回包含结果。
举例：include(3rd/cmake/helper.cmake)
include(3rd/cmake/helper.h)

add_library
有5种使用方法，具体参考https://cmake.org/cmake/help/v3.0/command/add_library.html?highlight=add_library#command:add_library
1，add_library(<name> [STATIC | SHARED | MODULE]
            [EXCLUDE_FROM_ALL]
            source1 [source2 ...])
普通的库编译，可以编译动态库，静态库以及模块。

2，add_library(<name> <SHARED|STATIC|MODULE|UNKNOWN> IMPORTED [GLOBAL])
导入已经编译好的库

3，add_library(<name> OBJECT <src>...)
定义个obj变量，此变量可以被add_library或add_executable通过$<TARGET_OBJECTS:objlib> 调用，其中objlib就是name

4，add_library(<name> ALIAS <target>)
定义一个别名

5，add_library(<name> INTERFACE [IMPORTED [GLOBAL]])
创建一个接口库，和方法3有点类似。

相关概念参考：
https://cmake.org/cmake/help/v3.0/manual/cmake-buildsystem.7.html

target_include_directories(<target> [SYSTEM] [BEFORE]
  <INTERFACE|PUBLIC|PRIVATE> [items1...]
  [<INTERFACE|PUBLIC|PRIVATE> [items2...] ...])
添加依赖路径，可以是相对路径，可以是据对路径。

CMAKE_CURRENT_SOURCE_DIR:当前目录
CMAKE_CURRENT_LIST_DIR:当前正在处理的listfile的完整目录。

set_target_properties(target1 target2 ...
                      PROPERTIES prop1 value1
                      prop2 value2 ...)
设置target属性，map结构
